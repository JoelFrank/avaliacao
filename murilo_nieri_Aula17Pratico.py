# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13ho3TiE2Kv_z2BJh2S2GAec0kavkgjXp
"""

import numpy as np
import random

tamanho = 4

OURO = (0, 3)
POCOS = [(1, 1), (2, 2)]
WUMPUS = (3, 0)

taxa_aprendizado = 0.1
desconto = 0.9
epsilon = 0.2

acoes = ['cima', 'baixo', 'esquerda', 'direita']

Q = np.zeros((tamanho, tamanho, len(acoes)))

def mover(posicao, acao):
    linha, coluna = posicao
    if acao == 'cima' and linha > 0:
        linha -= 1
    elif acao == 'baixo' and linha < tamanho - 1:
        linha += 1
    elif acao == 'esquerda' and coluna > 0:
        coluna -= 1
    elif acao == 'direita' and coluna < tamanho - 1:
        coluna += 1
    return (linha, coluna)

def recompensa(posicao):
    if posicao == OURO:
        return 100
    elif posicao in POCOS:
        return -100
    elif posicao == WUMPUS:
        return -100
    else:
        return -1

def escolher_acao(posicao):
    if random.uniform(0, 1) < epsilon:
        return random.choice(range(len(acoes)))
    else:
        linha, coluna = posicao
        return np.argmax(Q[linha, coluna])

def treinar(episodios):
    for episodio in range(episodios):
        posicao = (3, 3)
        while True:
            linha, coluna = posicao
            acao_id = escolher_acao(posicao)
            nova_pos = mover(posicao, acoes[acao_id])
            r = recompensa(nova_pos)
            nova_linha, nova_coluna = nova_pos


            Q[linha, coluna, acao_id] += taxa_aprendizado * (
                r + desconto * np.max(Q[nova_linha, nova_coluna]) - Q[linha, coluna, acao_id]
            )

            posicao = nova_pos

            if posicao == OURO or posicao in POCOS or posicao == WUMPUS:
                break

def executar_agente():
    posicao = (3, 3)
    caminho = [posicao]
    while posicao != OURO:
        linha, coluna = posicao
        acao_id = np.argmax(Q[linha, coluna])
        nova_pos = mover(posicao, acoes[acao_id])
        caminho.append(nova_pos)
        if nova_pos in POCOS or nova_pos == WUMPUS:
            print("O agente morreu no caminho...")
            break
        posicao = nova_pos
    print("Caminho percorrido:", caminho)

if __name__ == "__main__":
    treinar(1000)
    executar_agente()